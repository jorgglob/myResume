// Generated by Dagger (https://google.github.io/dagger).
package com.example.data.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

public final class ApiModule_ProvidesOkHttpClientFactory implements Factory<OkHttpClient> {
  private final ApiModule module;

  public ApiModule_ProvidesOkHttpClientFactory(ApiModule module) {
    this.module = module;
  }

  @Override
  public OkHttpClient get() {
    return provideInstance(module);
  }

  public static OkHttpClient provideInstance(ApiModule module) {
    return proxyProvidesOkHttpClient(module);
  }

  public static ApiModule_ProvidesOkHttpClientFactory create(ApiModule module) {
    return new ApiModule_ProvidesOkHttpClientFactory(module);
  }

  public static OkHttpClient proxyProvidesOkHttpClient(ApiModule instance) {
    return Preconditions.checkNotNull(
        instance.providesOkHttpClient(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
