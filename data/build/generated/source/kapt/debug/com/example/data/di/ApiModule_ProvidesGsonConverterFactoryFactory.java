// Generated by Dagger (https://google.github.io/dagger).
package com.example.data.di;

import com.google.gson.Gson;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.converter.gson.GsonConverterFactory;

public final class ApiModule_ProvidesGsonConverterFactoryFactory
    implements Factory<GsonConverterFactory> {
  private final ApiModule module;

  private final Provider<Gson> gsonProvider;

  public ApiModule_ProvidesGsonConverterFactoryFactory(
      ApiModule module, Provider<Gson> gsonProvider) {
    this.module = module;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public GsonConverterFactory get() {
    return provideInstance(module, gsonProvider);
  }

  public static GsonConverterFactory provideInstance(
      ApiModule module, Provider<Gson> gsonProvider) {
    return proxyProvidesGsonConverterFactory(module, gsonProvider.get());
  }

  public static ApiModule_ProvidesGsonConverterFactoryFactory create(
      ApiModule module, Provider<Gson> gsonProvider) {
    return new ApiModule_ProvidesGsonConverterFactoryFactory(module, gsonProvider);
  }

  public static GsonConverterFactory proxyProvidesGsonConverterFactory(
      ApiModule instance, Gson gson) {
    return Preconditions.checkNotNull(
        instance.providesGsonConverterFactory(gson),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
