// Generated by Dagger (https://google.github.io/dagger).
package com.example.myresume;

import com.example.myresume.domain.repository.ResumeRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MockAppModule_ProvidesResumeRepositoryFactory
    implements Factory<ResumeRepository> {
  private final MockAppModule module;

  public MockAppModule_ProvidesResumeRepositoryFactory(MockAppModule module) {
    this.module = module;
  }

  @Override
  public ResumeRepository get() {
    return provideInstance(module);
  }

  public static ResumeRepository provideInstance(MockAppModule module) {
    return proxyProvidesResumeRepository(module);
  }

  public static MockAppModule_ProvidesResumeRepositoryFactory create(MockAppModule module) {
    return new MockAppModule_ProvidesResumeRepositoryFactory(module);
  }

  public static ResumeRepository proxyProvidesResumeRepository(MockAppModule instance) {
    return Preconditions.checkNotNull(
        instance.providesResumeRepository(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
