// Generated by Dagger (https://google.github.io/dagger).
package com.example.myresume;

import com.example.myresume.domain.executor.BackgroundExecutor;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MockThreadModule_ProvidesJobExecutorFactory
    implements Factory<BackgroundExecutor> {
  private final MockThreadModule module;

  public MockThreadModule_ProvidesJobExecutorFactory(MockThreadModule module) {
    this.module = module;
  }

  @Override
  public BackgroundExecutor get() {
    return provideInstance(module);
  }

  public static BackgroundExecutor provideInstance(MockThreadModule module) {
    return proxyProvidesJobExecutor(module);
  }

  public static MockThreadModule_ProvidesJobExecutorFactory create(MockThreadModule module) {
    return new MockThreadModule_ProvidesJobExecutorFactory(module);
  }

  public static BackgroundExecutor proxyProvidesJobExecutor(MockThreadModule instance) {
    return Preconditions.checkNotNull(
        instance.providesJobExecutor(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
