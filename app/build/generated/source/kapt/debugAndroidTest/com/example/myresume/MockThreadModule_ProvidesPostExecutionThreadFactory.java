// Generated by Dagger (https://google.github.io/dagger).
package com.example.myresume;

import com.example.myresume.domain.executor.UiThreadExecutor;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MockThreadModule_ProvidesPostExecutionThreadFactory
    implements Factory<UiThreadExecutor> {
  private final MockThreadModule module;

  public MockThreadModule_ProvidesPostExecutionThreadFactory(MockThreadModule module) {
    this.module = module;
  }

  @Override
  public UiThreadExecutor get() {
    return provideInstance(module);
  }

  public static UiThreadExecutor provideInstance(MockThreadModule module) {
    return proxyProvidesPostExecutionThread(module);
  }

  public static MockThreadModule_ProvidesPostExecutionThreadFactory create(
      MockThreadModule module) {
    return new MockThreadModule_ProvidesPostExecutionThreadFactory(module);
  }

  public static UiThreadExecutor proxyProvidesPostExecutionThread(MockThreadModule instance) {
    return Preconditions.checkNotNull(
        instance.providesPostExecutionThread(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
