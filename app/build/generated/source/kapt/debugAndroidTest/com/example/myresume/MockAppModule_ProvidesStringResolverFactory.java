// Generated by Dagger (https://google.github.io/dagger).
package com.example.myresume;

import com.example.myresume.domain.resolver.StringsResolver;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MockAppModule_ProvidesStringResolverFactory implements Factory<StringsResolver> {
  private final MockAppModule module;

  public MockAppModule_ProvidesStringResolverFactory(MockAppModule module) {
    this.module = module;
  }

  @Override
  public StringsResolver get() {
    return provideInstance(module);
  }

  public static StringsResolver provideInstance(MockAppModule module) {
    return proxyProvidesStringResolver(module);
  }

  public static MockAppModule_ProvidesStringResolverFactory create(MockAppModule module) {
    return new MockAppModule_ProvidesStringResolverFactory(module);
  }

  public static StringsResolver proxyProvidesStringResolver(MockAppModule instance) {
    return Preconditions.checkNotNull(
        instance.providesStringResolver(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
