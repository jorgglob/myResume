// Generated by Dagger (https://google.github.io/dagger).
package com.example.myresume.di;

import android.content.res.Resources;
import com.example.myresume.domain.resolver.StringsResolver;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvidesStringResolverFactory implements Factory<StringsResolver> {
  private final AppModule module;

  private final Provider<Resources> resourcesProvider;

  public AppModule_ProvidesStringResolverFactory(
      AppModule module, Provider<Resources> resourcesProvider) {
    this.module = module;
    this.resourcesProvider = resourcesProvider;
  }

  @Override
  public StringsResolver get() {
    return provideInstance(module, resourcesProvider);
  }

  public static StringsResolver provideInstance(
      AppModule module, Provider<Resources> resourcesProvider) {
    return proxyProvidesStringResolver(module, resourcesProvider.get());
  }

  public static AppModule_ProvidesStringResolverFactory create(
      AppModule module, Provider<Resources> resourcesProvider) {
    return new AppModule_ProvidesStringResolverFactory(module, resourcesProvider);
  }

  public static StringsResolver proxyProvidesStringResolver(
      AppModule instance, Resources resources) {
    return Preconditions.checkNotNull(
        instance.providesStringResolver(resources),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
